서블릿 (servlet)은 서버에서 웹페이지 등을 동적으로 생성하거나
데이터 처리를 수행하기 위해 자바로 작성된 브로그램읻.
servlet은 자바코드 안에 HTML 태그가 삽입되며 자바언어로 되어 있다 java가 확장자이다
서블릿의 단어는  Servet + Let의 합성어라고 알고 있는 사람고 있고
Servet + Allpet으로 알고 있는 사람도 있다.
즉) 쉽게 말하면 '클라이언트의 요청으로 처리하고 그 결과를 다시 클라이언트에게 전송하는
servelt 클래스의 구현 규칙을 지킨 자바 프로그램'인 것.
서블릿은 자바 언어를 웹어플리케이션에 조금 더 개발하기 쉽게 하기 위해서 만든
API(라이브러리, 클래스 들)이며 규악에 맞는 라이브러리나 크랠스들을 상속및 구현하여
만든 클래스들을 서블릿이라고 한다.

Servlet : 자바 클래스 형태의 웹 애플리케이션, 수행속도가 빠른 장점
자바에서 html등의 스크립의언어를 사용할 수 있게 된다

데이터 전송 방식
get : 주소창을 타고 넘어가기 때문에 서버로 보내는 데이터를 사용
post : html header를 타고 넘어가기 때문에 보안에 강함,
		255자 이상의 대용량 데이터 전송
handle : 두 가지 방식을 모두 활용

Jsp 
 HTML을 코딩하기 너무 불편해서 HTML 내부에 Java 코드를 삽입하는 형식이  JSP이다.
  다시 말해 서블릿의 단점을 보완학자 만든 '서버 기반의 스크립트 기술'이다.
  JSP(Java Server Pages)는 서블릿 기반의 '서버 스크립트 기술'이다.
  정적 데이터만 처리할 수 있는 HTML의 단점을 극복한 스크립트 언어
  
 <배포서술사 - web.xml>
 	웹 애플리케이션의 환경설정 정보를 담은 파일이다.
 	WAS가 구동될때 처음 이 팡일을 읽어 설정 내용을 톰캣에 적용하게 된다.
 	서블릿설정, 필터설정, 웰컴파일목록, 오류페이지 처리와 같은 설정을 할 수 있다.
 	
WAS(Web Application Server) <--- 톰캣
	JSP, ASP, PHP 등 사용자의 입력을 받아 서버에게 무언가를 처리하고
	그 결과를 보여주는 동적인 데이터를 처리하는웹서버이다.
	WAS는 규모가 크고 엔터프라이즈 환경에 필요한 트랜잭션, 보안, 트래픽관이, DB 커넥션 풀
	사용자 관리 등등 다양하고 강력한 기능을 제공하는 S/W를 의미한다.

페이지 지시어 : JSP 페이지에 대한 정보를 설정한다.
	<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
	1. page 지시어
	2. include 지시어
	3. taglib 지시어
	
응답코드
: 서버 응답 코드는 클라이언트의 REQUREST를 처리 후 상태에 따라 반환하는 코드이다.
   응답 코드는 크게 5가지로 분류된다.
 
1XX : 조건부 응답			102 : Processing
2XX : 성공					201 :  클라이언트가 요청한 정보를 정상적으로 저장완료
3XX : 리다이렉션 완료
4XX : 요청 오류				404 : 찾을 수 없음. 페이지 접속할 수 없을 때 반환.
								400 : 잘못된 요청. Bad Request
5XX : 서버오류								500 : 내부 서버 오류. (톰캣에러)
	
컨텍스트 패스(Context Path)
	서블릿을 요청하기 위한 URL
	JSP나 Servlet를 실행하면 항상 앞에 생성되는
	http://localhost는웹서버에 접속하기 위한 ip 주소
	:8080은 톰캣에서 최초 지정된 포트번호
	그 뒤에 오는 것을 컨텍스트패스라고 한다.
	이클립스와 톰캣을 연동해 웹 애플리케이션을 실행할 때 server.xml 자동으로 추가된다.	